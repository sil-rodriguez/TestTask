{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Silvina\\\\my-app\\\\src\\\\components\\\\TransactionAccordion.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Accordion from './Accordion';\nimport Transaction from './Transaction';\n\nclass TransactionAccordion extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/transactions\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 14\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, \"Transactions\"), /*#__PURE__*/React.createElement(Accordion, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, items.map(item => /*#__PURE__*/React.createElement(\"div\", {\n        label: \"Alligator Mississippiensis\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Transaction, {\n        id: item.id,\n        type: item.type,\n        amount: item.amount,\n        date: item.date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }\n\n}\n\nexport default TransactionAccordion;","map":{"version":3,"sources":["C:/Users/Silvina/my-app/src/components/TransactionAccordion.js"],"names":["React","render","Accordion","Transaction","TransactionAccordion","Component","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","message","map","item","id","type","amount","date"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,oBAAN,SAAmCJ,KAAK,CAACK,SAAzC,CAAmD;AAEjDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEM;AAFK,OAAd;AAID,KARL,EASKR,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAdL;AAgBC;;AAEHR,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEQ,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACU,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCC,KAAK,CAACS,GAAN,CAAUC,IAAI,iBACb;AAAK,QAAA,KAAK,EAAC,4BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AACQ,QAAA,EAAE,EAAEA,IAAI,CAACC,EADjB;AAEQ,QAAA,IAAI,EAAED,IAAI,CAACE,IAFnB;AAGQ,QAAA,MAAM,EAAEF,IAAI,CAACG,MAHrB;AAIQ,QAAA,IAAI,EAAEH,IAAI,CAACI,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADD,CADD,CAFF,CADF;AAkBD;AACF;;AAvDgD;;AAyDnD,eAAerB,oBAAf","sourcesContent":["import React from 'react';\r\nimport { render } from 'react-dom';\r\n\r\nimport Accordion from './Accordion';\r\nimport Transaction from './Transaction';\r\n\r\nclass TransactionAccordion extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:8080/transactions\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n    }\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1>Transactions</h1>\r\n          <Accordion>\r\n          {items.map(item => (\r\n            <div label='Alligator Mississippiensis'>\r\n              <Transaction\r\n                      id={item.id}\r\n                      type={item.type}\r\n                      amount={item.amount}\r\n                      date={item.date}\r\n                  >\r\n                </Transaction>\r\n            </div>\r\n          ))}\r\n          </Accordion>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default TransactionAccordion;\r\n"]},"metadata":{},"sourceType":"module"}